@use "sass:map";
@use 'variables' as *;
@use 'mixins' as *;

// ================================================
// Spacing Utilities
// ================================================
@each $abbr, $props in $novix-spacing-directions {
  @each $size, $value in $novix-spacing-scale {
    %m#{$abbr}-#{$size} {
      @each $prop in $props {
        #{$prop}: $value !important;
      }
    }
  }
}

@each $abbr, $props in $novix-padding-directions {
  @each $size, $value in $novix-spacing-scale {
    %p#{$abbr}-#{$size} {
      @each $prop in $props {
        #{$prop}: $value !important;
      }
    }
  }
}

// ================================================
// Display Utilities
// ================================================
@each $display in $novix-display-values {
  %d-#{$display} {
    display: $display !important;
  }
}

// ================================================
// Flex Wrap Utilities
// ================================================
@each $wrap in $novix-flex-wrap-values {
  %flex-#{$wrap} {
    flex-wrap: $wrap !important;
  }
}

// ================================================
// Flex Direction Utilities
// ================================================
@each $dir in $novix-flex-directions {
  %flex-#{$dir} {
    flex-direction: $dir !important;
  }
}

// ================================================
// Flex Grow/Shrink Utilities
// ================================================
@each $val in (0, 1, 2, 3) {
  %flex-grow-#{$val} {
    flex-grow: $val !important;
  }

  %flex-shrink-#{$val} {
    flex-shrink: $val !important;
  }
}

// ================================================
// Gap Utilities
// ================================================
@each $key, $size in $novix-spacing-scale {
  %g-#{$key}   { gap: $size !important; }
  %gx-#{$key}  { column-gap: $size !important; }
  %gy-#{$key}  { row-gap: $size !important; }
}

// ================================================
// Order Utilities
// ================================================
@each $val in (0, 1, 2, 3, 4, 5) {
  %order-#{$val} { order: $val !important; }
}

@each $keyword, $val in (first: -1, last: 999) {
  %order-#{$keyword} { order: $val !important; }
}

// ================================================
// Justify Content
// ================================================
@each $key, $val in $novix-justify-values {
  %justify-content-#{$key} { justify-content: $val !important; }
}

// ================================================
// Align Items
// ================================================
@each $key, $val in $novix-align-values {
  %align-items-#{$key} { align-items: $val !important; }
}

// ================================================
// Container Utilities
// ================================================
%container-base {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  // padding-right: map.get($novix-spacing-scale, 3);
  // padding-left: map.get($novix-spacing-scale, 3);
}

// %container {
//   @extend %container-base;
//   @include novix-respond(sm) { max-width: 540px; }
//   @include novix-respond(md) { max-width: 720px; }
//   @include novix-respond(lg) { max-width: 960px; }
//   @include novix-respond(xl) { max-width: 1140px; }
// }

%container {
  @extend %container-base;
  @each $bp, $width in $novix-breakpoints {
    @include novix-respond($bp) {
      max-width: $width;
    }
  }
}

%container-fluid {
  @extend %container-base;
  max-width: 100%;
}

// ================================================
// Border Width
// ================================================
@each $key, $val in $novix-border-width-values {
  %border-#{$key} {
    border-width: $val !important;
    @if $val != 0 {
      border-style: solid !important;
    }
  }

  %border-top-#{$key}     { border-top-width: $val !important; @if $val != 0 { border-top-style: solid !important; } }
  %border-end-#{$key}     { border-inline-end-width: $val !important; @if $val != 0 { border-inline-end-style: solid !important; } }
  %border-bottom-#{$key}  { border-bottom-width: $val !important; @if $val != 0 { border-bottom-style: solid !important; } }
  %border-start-#{$key}   { border-inline-start-width: $val !important; @if $val != 0 { border-inline-start-style: solid !important; } }
}

// ================================================
// Border Style
// ================================================
@each $style in $novix-border-styles {
  %border-#{$style} { border-style: $style !important; }

  %border-top-#{$style}     { border-top-style: $style !important; }
  %border-end-#{$style}     { border-inline-end-style: $style !important; }
  %border-bottom-#{$style}  { border-bottom-style: $style !important; }
  %border-start-#{$style}   { border-inline-start-style: $style !important; }
}

// ================================================
// Border Radius
// ================================================
@each $key, $val in $novix-radius-scale {
  %rounded-#{$key} {
    border-radius: $val !important;
  }

  %rounded-top-#{$key} {
    border-top-left-radius: $val !important;
    border-top-right-radius: $val !important;
  }
  %rounded-end-#{$key} {
    border-top-right-radius: $val !important;
    border-bottom-right-radius: $val !important;
  }
  %rounded-bottom-#{$key} {
    border-bottom-left-radius: $val !important;
    border-bottom-right-radius: $val !important;
  }
  %rounded-start-#{$key} {
    border-top-left-radius: $val !important;
    border-bottom-left-radius: $val !important;
  }
}

// ================================================
// Positioning
// ================================================
@each $key, $val in $novix-position-values {
  %start-#{$key}   { left: $val !important; }
  %end-#{$key}     { right: $val !important; }
  %top-#{$key}     { top: $val !important; }
  %bottom-#{$key}  { bottom: $val !important; }
}

%translate-middle   { transform: translate(-50%, -50%); }
%translate-middle-x { transform: translateX(-50%); }
%translate-middle-y { transform: translateY(-50%); }

%v-center {
  @extend %top-50;
  @extend %translate-middle-y;
}
%h-center {
  @extend %start-50;
  @extend %translate-middle-x;
}
