@use "sass:map";
@use 'variables' as *;
@use 'mixins' as *;

// ================================================
// Spacing Utilities (Bootstrap-style naming)
// ================================================
$novix-spacing-directions: (
  "": (margin),
  "t": (margin-top),
  "b": (margin-bottom),
  "s": (margin-inline-start),
  "e": (margin-inline-end),
  "x": (margin-left, margin-right),
  "y": (margin-top, margin-bottom)
);

$novix-padding-directions: (
  "": (padding),
  "t": (padding-top),
  "b": (padding-bottom),
  "s": (padding-inline-start),
  "e": (padding-inline-end),
  "x": (padding-left, padding-right),
  "y": (padding-top, padding-bottom)
);

@each $novix-abbr, $novix-properties in $novix-spacing-directions {
  @each $novix-size, $novix-value in $novix-spacing-scale {
    .m#{$novix-abbr}-#{$novix-size} {
      @each $novix-prop in $novix-properties {
        #{$novix-prop}: $novix-value !important;
      }
    }
    @each $novix-bp, $novix-bp-width in $novix-breakpoints {
      .m#{$novix-abbr}-#{$novix-bp}-#{$novix-size} {
        @include novix-respond($novix-bp) {
          @each $novix-prop in $novix-properties {
            #{$novix-prop}: $novix-value !important;
          }
        }
      }
    }
  }
}

@each $novix-abbr, $novix-properties in $novix-padding-directions {
  @each $novix-size, $novix-value in $novix-spacing-scale {
    .p#{$novix-abbr}-#{$novix-size} {
      @each $novix-prop in $novix-properties {
        #{$novix-prop}: $novix-value !important;
      }
    }
    @each $novix-bp, $novix-bp-width in $novix-breakpoints {
      .p#{$novix-abbr}-#{$novix-bp}-#{$novix-size} {
        @include novix-respond($novix-bp) {
          @each $novix-prop in $novix-properties {
            #{$novix-prop}: $novix-value !important;
          }
        }
      }
    }
  }
}

// ================================================
// Display Utilities
// ================================================
$novix-display-values: (
  none,
  inline,
  inline-block,
  block,
  flex,
  grid
);

@each $novix-display in $novix-display-values {
  .d-#{$novix-display} {
    display: $novix-display !important;
  }
  @each $novix-bp, $novix-bp-width in $novix-breakpoints {
    .d-#{$novix-bp}-#{$novix-display} {
      @include novix-respond($novix-bp) {
        display: $novix-display !important;
      }
    }
  }
}

// ================================================
// Flex Wrap Utilities
// ================================================
$novix-flex-wrap-values: (
  wrap: wrap,
  nowrap: nowrap,
  wrap-reverse: wrap-reverse
);

@each $novix-name, $novix-val in $novix-flex-wrap-values {
  .flex-#{$novix-name} { flex-wrap: $novix-val !important; }
  @each $novix-bp, $novix-bp-width in $novix-breakpoints {
    .flex-#{$novix-bp}-#{$novix-name} {
      @include novix-respond($novix-bp) {
        flex-wrap: $novix-val !important;
      }
    }
  }
}

// ================================================
// Flex Direction Utilities
// ================================================
$novix-flex-directions: (row, row-reverse, column, column-reverse);
@each $novix-dir in $novix-flex-directions {
  .flex-#{$novix-dir} { flex-direction: $novix-dir !important; }
  @each $novix-bp, $novix-bp-width in $novix-breakpoints {
    .flex-#{$novix-bp}-#{$novix-dir} {
      @include novix-respond($novix-bp) {
        flex-direction: $novix-dir !important;
      }
    }
  }
}

// ================================================
// Flex Grow Utilities
// ================================================
$novix-flex-grow-values: (0, 1);

@each $novix-val in $novix-flex-grow-values {
  .flex-grow-#{$novix-val} { flex-grow: $novix-val !important; }
  @each $novix-bp, $novix-bp-width in $novix-breakpoints {
    .flex-grow-#{$novix-bp}-#{$novix-val} {
      @include novix-respond($novix-bp) {
        flex-grow: $novix-val !important;
      }
    }
  }
}

// ================================================
// Flex Shrink Utilities
// ================================================
$novix-flex-shrink-values: (0, 1);

@each $novix-val in $novix-flex-shrink-values {
  .flex-shrink-#{$novix-val} { flex-shrink: $novix-val !important; }
  @each $novix-bp, $novix-bp-width in $novix-breakpoints {
    .flex-shrink-#{$novix-bp}-#{$novix-val} {
      @include novix-respond($novix-bp) {
        flex-shrink: $novix-val !important;
      }
    }
  }
}

// ================================================
// GAP UTILITIES
// ================================================
$novix-gap-scale: $novix-spacing-scale !default;

//--Base gap utilities and responsive variants
@each $novix-name, $novix-size in $novix-gap-scale {
  //--Base
  .g-#{$novix-name}   { gap: $novix-size !important; }
  .gx-#{$novix-name}  { column-gap: $novix-size !important; }
  .gy-#{$novix-name}  { row-gap: $novix-size !important; }

  //--Responsive
  @each $novix-bp, $novix-bp-width in $novix-breakpoints {
    .g-#{$novix-bp}-#{$novix-name} {
      @include novix-respond($novix-bp) { gap: $novix-size !important; }
    }
    .gx-#{$novix-bp}-#{$novix-name} {
      @include novix-respond($novix-bp) { column-gap: $novix-size !important; }
    }
    .gy-#{$novix-bp}-#{$novix-name} {
      @include novix-respond($novix-bp) { row-gap: $novix-size !important; }
    }
  }
}

// ================================================
// ORDER UTILITIES
// ================================================

//--Define the order values you want to support
//--0 is default, higher numbers push items later in the order
$novix-order-values: (0, 1, 2, 3, 4, 5);

@each $novix-val in $novix-order-values {
  //--Base
  .order-#{$novix-val} { order: $novix-val !important; }

  //--Responsive
  @each $novix-bp, $novix-bp-width in $novix-breakpoints {
    .order-#{$novix-bp}-#{$novix-val} {
      @include novix-respond($novix-bp) {
        order: $novix-val !important;
      }
    }
  }
}

//--Special keyword values
$novix-order-keywords: (
  first: -1,
  last: 999
);

@each $novix-name, $novix-val in $novix-order-keywords {
  //--Base
  .order-#{$novix-name} { order: $novix-val !important; }

  //--Responsive
  @each $novix-bp, $novix-bp-width in $novix-breakpoints {
    .order-#{$novix-bp}-#{$novix-name} {
      @include novix-respond($novix-bp) {
        order: $novix-val !important;
      }
    }
  }
}

// ================================================
// Justify-content (Bootstrap-style naming)
// ================================================
$novix-justify-values: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around,
  evenly: space-evenly
);

@each $novix-name, $novix-val in $novix-justify-values {
  .justify-content-#{$novix-name} { justify-content: $novix-val !important; }
  @each $novix-bp, $novix-bp-width in $novix-breakpoints {
    .justify-content-#{$novix-bp}-#{$novix-name} {
      @include novix-respond($novix-bp) {
        justify-content: $novix-val !important;
      }
    }
  }
}

// ================================================
// Align-items (Bootstrap-style naming)
// ================================================
$novix-align-values: (
  start: flex-start,
  end: flex-end,
  center: center,
  baseline: baseline,
  stretch: stretch
);

@each $novix-name, $novix-val in $novix-align-values {
  .align-items-#{$novix-name} { align-items: $novix-val !important; }
  @each $novix-bp, $novix-bp-width in $novix-breakpoints {
    .align-items-#{$novix-bp}-#{$novix-name} {
      @include novix-respond($novix-bp) {
        align-items: $novix-val !important;
      }
    }
  }
}

// ================================================
// Container Utilities
// ================================================
.container,
.container-fluid {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: map.get($novix-spacing-scale, 3);
  padding-left: map.get($novix-spacing-scale, 3);
}

.container {
  @include novix-respond(sm) { max-width: 540px; }
  @include novix-respond(md) { max-width: 720px; }
  @include novix-respond(lg) { max-width: 960px; }
  @include novix-respond(xl) { max-width: 1140px; }
}

.container-fluid {
  max-width: 100%;
}

// ================================================
// BORDER WIDTH UTILITIES
// ================================================
$novix-border-widths: (
  0: 0,
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
  5: 5px
);

//--Whole element border widths
@each $novix-name, $novix-val in $novix-border-widths {
  .border-#{$novix-name} {
    border-width: $novix-val !important;
    @if $novix-val != 0 {
      border-style: solid !important;
    }
  }
}

//--Per-side border widths
@each $novix-name, $novix-val in $novix-border-widths {
  .border-top-#{$novix-name}    { border-top-width: $novix-val !important; }
  .border-end-#{$novix-name}    { border-inline-end-width: $novix-val !important; }
  .border-bottom-#{$novix-name} { border-bottom-width: $novix-val !important; }
  .border-start-#{$novix-name}  { border-inline-start-width: $novix-val !important; }
}

// ================================================
// BORDER STYLE UTILITIES
// ================================================
$novix-border-styles: (solid, dashed, dotted, double, groove, ridge, inset, outset, none);

//--Whole element border styles
@each $novix-style in $novix-border-styles {
  .border-#{$novix-style} { border-style: $novix-style !important; }
}

//--Per-side border styles
@each $novix-style in $novix-border-styles {
  .border-top-#{$novix-style}    { border-top-style: $novix-style !important; }
  .border-end-#{$novix-style}    { border-inline-end-style: $novix-style !important; }
  .border-bottom-#{$novix-style} { border-bottom-style: $novix-style !important; }
  .border-start-#{$novix-style}  { border-inline-start-style: $novix-style !important; }
}

// ================================================
// Border Radius Utilities (Bootstrap-style naming)
// ================================================
@each $novix-name, $novix-val in $novix-radius-scale {
  .rounded-#{$novix-name} {
    border-radius: $novix-val !important;
  }
}

//--Per-corder radius utilities
@each $novix-name, $novix-val in $novix-radius-scale {
  .rounded-top-#{$novix-name} {
    border-top-left-radius: $novix-val !important;
    border-top-right-radius: $novix-val !important;
  }
  .rounded-end-#{$novix-name} {
    border-top-right-radius: $novix-val !important;
    border-bottom-right-radius: $novix-val !important;
  }
  .rounded-bottom-#{$novix-name} {
    border-bottom-left-radius: $novix-val !important;
    border-bottom-right-radius: $novix-val !important;
  }
  .rounded-start-#{$novix-name} {
    border-top-left-radius: $novix-val !important;
    border-bottom-left-radius: $novix-val !important;
  }
}
